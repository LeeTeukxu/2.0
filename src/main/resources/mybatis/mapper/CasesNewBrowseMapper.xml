<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhide.dtsystem.mapper.CasesNewBrowseMapper">
    <select id="getData" resultType="map">
        Select * from (
        select *,row_number() over(ORDER by ${sortField} ${sortOrder}) as RowNum,Count(1) over() as _TotalNum
        from View_CasesMainBrowse
        <where>
            1=1
            <if test="RoleName!='系统管理员' and RoleName.indexOf('流程')==-1 and RoleName.indexOf('财务')==-1">
                and dbo.fn_Auth_JiaoDan(#{UserID},#{RoleName},State,CreateMan,AuditMan,TechMan,TechManager,
                AuditManager,CreateManager)=1
            </if>
            <if test="State!=null and State!=''">
                And State =#{State}
            </if>
            <if test="orItems!=null">
                <if test="orItems.size()>0">
                    And
                    <foreach collection="orItems" open="(" close=")" separator=" OR " item="item">
                        (${item.field} ${item.oper} #{item.value})
                    </foreach>
                </if>
            </if>
            <if test="andItems!=null">
                <if test="andItems.size()>0">
                    And
                    <foreach collection="andItems" open="(" close=")" separator=" And " item="item">
                        (${item.field} ${item.oper} #{item.value})
                    </foreach>
                </if>
            </if>
        </where>
        )t Where RowNum BETWEEN #{Begin} And #{End}
    </select>
    <select id="getSelectMoney" resultType="map">
        Select a.ID,
               a.State,
               a.ArrID,
               a.Dai,
               a.Guan,
               a.Total,
               b.DocumentNumber as DocSN,
               a.ClientID,
               a.ClientName,
               a.CreateMan,
               a.CreateTime,
               a.AuditTime,
               a.AuditMan,
               b.PaymentAmount  as PayMoney,
               a.AuditMemo
        from arrivalUseDetail a
                 inner join
             tbArrivalRegistration b on a.ArrID = b.ArrivalRegistrationID
        Where a.CasesID = #{CasesID}
        Select a.ID, a.State
        from tbCust
    </select>
    <select id="getRefundMoney" resultType="map">
        Select 4                                                                                  as State,
               a.DocumentNumber                                                                   as DocSN,
               (0 - convert(decimal, AgencyFeeAmount)) + (0 - convert(decimal, OfficalFeeAmount)) as PayMoney,
               0 - convert(decimal, OfficalFeeAmount)                                             as Guan,
               0 - convert(decimal, AgencyFeeAmount)                                              as Dai,
               (0 - convert(decimal, AgencyFeeAmount)) + (0 - convert(decimal, OfficalFeeAmount)) as Total,
               Applicant                                                                          as CreateMan,
               a.AddTime                                                                          as CreateTime,
               Approver                                                                           as AuditMan,
               ApproverDescription                                                                as AuditMemo,
               ApproverDate                                                                       as AuditTime
        from tbCustomerRefund a Where a.DocumentNumber=#{DocSN}
    </select>
</mapper>